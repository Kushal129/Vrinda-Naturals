src/App.jsx
import { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { motion, AnimatePresence } from 'framer-motion';
import ErrorBoundary from './components/ErrorBoundary';
import NotFound from './components/NotFound';
import Navbar from './components/Navbar';
import Hero from './components/Hero';
import About from './components/About';
import Products from './components/Products';
import Certifications from './components/Certifications';
import Contact from './components/Contact';
import Footer from './components/Footer';
import Loader from './components/Loader';

function MainContent() {
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    setTimeout(() => setLoading(false), 2000);
  }, []);

  return (
    <AnimatePresence mode="wait">
      {loading ? (
        <Loader key="loader" />
      ) : (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          className="min-h-screen bg-dark-100"
        >
          <Navbar />
          <main>
            <Hero />
            <About />
            <Products />
            <Certifications />
            <Contact />
          </main>
          <Footer />
        </motion.div>
      )}
    </AnimatePresence>
  );
}

function App() {
  return (
    <ErrorBoundary>
      <Router>
        <Routes>
          <Route path="/" element={<MainContent />} />
          <Route path="*" element={<NotFound />} />
        </Routes>
      </Router>
    </ErrorBoundary>
  );
}

export default App;
--------------------------
src/components/ErrorBoundary.jsx
import { Component } from 'react';
import { motion } from 'framer-motion';
import { AlertTriangle } from 'lucide-react';

class ErrorBoundary extends Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false, error: null };
  }

  static getDerivedStateFromError(error) {
    return { hasError: true, error };
  }

  render() {
    if (this.state.hasError) {
      return (
        <div className="min-h-screen bg-dark-100 flex items-center justify-center p-4">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="max-w-md w-full bg-dark-200 p-8 rounded-2xl shadow-xl text-center"
          >
            <motion.div
              animate={{ 
                rotate: [0, 10, -10, 0],
                scale: [1, 1.1, 1]
              }}
              transition={{ 
                duration: 2,
                repeat: Infinity,
                repeatType: "reverse"
              }}
              className="inline-block text-red-500 mb-6"
            >
              <AlertTriangle size={64} />
            </motion.div>
            <h1 className="text-2xl font-bold text-white mb-4">Oops! Something went wrong</h1>
            <p className="text-gray-400 mb-8">
              We're experiencing some technical difficulties. Please try refreshing the page or come back later.
            </p>
            <button
              onClick={() => window.location.reload()}
              className="bg-primary hover:bg-primary/90 text-white px-6 py-3 rounded-full transition-all transform hover:scale-105"
            >
              Refresh Page
            </button>
          </motion.div>
        </div>
      );
    }

    return this.props.children;
  }
}

export default ErrorBoundary;
-------------------------
src/components/Navbar.jsx

import { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Link } from 'react-scroll';
import { Menu, X, ChevronRight } from 'lucide-react';

function Navbar() {
  const [isOpen, setIsOpen] = useState(false);
  const [scrolled, setScrolled] = useState(false);
  const [activeSection, setActiveSection] = useState('home');

  useEffect(() => {
    const handleScroll = () => {
      setScrolled(window.scrollY > 50);
    };

    window.addEventListener('scroll', handleScroll);
    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, []);

  const navItems = ['home', 'about', 'products', 'certifications', 'contact'];

  const mobileMenuVariants = {
    hidden: { 
      opacity: 0,
      height: 0,
      transition: {
        staggerChildren: 0.05,
        staggerDirection: -1
      }
    },
    visible: { 
      opacity: 1,
      height: 'auto',
      transition: {
        staggerChildren: 0.05,
        delayChildren: 0.1
      }
    }
  };

  const menuItemVariants = {
    hidden: { x: -20, opacity: 0 },
    visible: { x: 0, opacity: 1 }
  };

  return (
    <motion.nav
      initial={{ y: -100 }}
      animate={{ y: 0 }}
      transition={{ duration: 0.5 }}
      className={`fixed top-0 w-full z-50 transition-all duration-300 ${
        scrolled 
          ? 'bg-dark-100/95 backdrop-blur-md shadow-lg shadow-primary/5 ' 
          : 'bg-transparent border-none'
      }`}
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-20">
          <Link
            to="home"
            spy={true}
            smooth={true}
            offset={-80}
            duration={500}
            className="text-2xl font-bold gradient-text cursor-pointer hover:scale-105 transition-transform"
            onClick={() => setActiveSection('home')}
          >
            Vrinda Naturals
          </Link>

          <div className="hidden md:flex space-x-8">
            {navItems.map((item) => (
              <Link
                key={item}
                to={item}
                spy={true}
                smooth={true}
                duration={500}
                offset={-80}
                onSetActive={() => setActiveSection(item)}
                className={`relative nav-link capitalize text-gray-300 hover:text-primary transition-all duration-300 px-4 py-2 cursor-pointer ${
                  activeSection === item ? 'text-primary' : ''
                }`}
              >
                {activeSection === item && (
                  <motion.div
                    layoutId="activeSection"
                    className="absolute inset-0 bg-primary/10 rounded-lg -z-10"
                    transition={{ duration: 0.3 }}
                  />
                )}
                {item}
              </Link>
            ))}
          </div>

          <button
            className="md:hidden relative w-10 h-10 text-gray-300 hover:text-primary focus:outline-none"
            onClick={() => setIsOpen(!isOpen)}
          >
            <AnimatePresence mode="wait">
              {isOpen ? (
                <motion.div
                  key="close"
                  initial={{ rotate: -90, opacity: 0 }}
                  animate={{ rotate: 0, opacity: 1 }}
                  exit={{ rotate: 90, opacity: 0 }}
                  transition={{ duration: 0.2 }}
                >
                  <X size={24} className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2" />
                </motion.div>
              ) : (
                <motion.div
                  key="menu"
                  initial={{ rotate: -90, opacity: 0 }}
                  animate={{ rotate: 0, opacity: 1 }}
                  exit={{ rotate: 90, opacity: 0 }}
                  transition={{ duration: 0.2 }}
                >
                  <Menu size={24} className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2" />
                </motion.div>
              )}
            </AnimatePresence>
          </button>
        </div>
      </div>

      <AnimatePresence>
        {isOpen && (
          <motion.div
            variants={mobileMenuVariants}
            initial="hidden"
            animate="visible"
            exit="hidden"
            className="md:hidden bg-dark-200/95 backdrop-blur-md border-t border-primary/10"
          >
            <div className="px-4 py-2 space-y-1">
              {navItems.map((item) => (
                <motion.div
                  key={item}
                  variants={menuItemVariants}
                  className="overflow-hidden"
                >
                  <Link
                    to={item}
                    spy={true}
                    smooth={true}
                    duration={500}
                    offset={-80}
                    className="group flex items-center px-3 py-3 text-gray-300 hover:text-primary capitalize transition-all duration-300"
                    onClick={() => {
                      setIsOpen(false);
                      setActiveSection(item);
                    }}
                  >
                    <ChevronRight className="w-4 h-4 mr-2 opacity-0 group-hover:opacity-100 transition-all duration-300" />
                    {item}
                  </Link>
                </motion.div>
              ))}
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.nav>
  );
}

export default Navbar;

---------------------
src/components/Hero.jsx

iimport { motion } from 'framer-motion';
import { Link } from 'react-scroll';
import { ChevronDown, Crown } from 'lucide-react';

function Hero() {
  const textVariants = {
    hidden: { opacity: 0, y: 50 },
    visible: { 
      opacity: 1, 
      y: 0,
      transition: {
        duration: 1,
        ease: "easeOut" 
      }
    }
  };

  const buttonVariants = {
    hidden: { opacity: 0, scale: 0.8 },
    visible: {
      opacity: 1,
      scale: 1,
      transition: {
        duration: 0.6,
        ease: "easeOut"
      }
    }
  };

  return (
    <section id="home" className="relative min-h-screen flex items-center justify-center overflow-hidden py-[8rem] bg-dark-100">
      {/* Animated background elements */}
      <div className="absolute inset-0 overflow-hidden">
        {[...Array(20)].map((_, i) => (
          <motion.div
            key={i}
            className="absolute w-1 h-1 bg-primary rounded-full"
            animate={{
              x: [Math.random() * window.innerWidth, Math.random() * window.innerWidth],
              y: [Math.random() * window.innerHeight, Math.random() * window.innerHeight],
              opacity: [0.2, 0.5, 0.2],
              scale: [1, 2, 1]
            }}
            transition={{
              duration: Math.random() * 8 + 4,
              repeat: Infinity,
              ease: "linear"
            }}
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`
            }}
          />
        ))}
      </div>

      <div className="relative z-10 max-w-6xl mx-auto px-4 text-center ">
        <motion.div
          initial="hidden"
          animate="visible"
          variants={{
            visible: {
              transition: {
                staggerChildren: 0.2
              }
            }
          }}
        >
          <motion.div className="relative inline-block mb-4" variants={buttonVariants}>
            <motion.div
              className="absolute -right-0 -top-8"
              animate={{
                rotate: [0, 10, -10, 0],
                transition: {
                  duration: 2,
                  repeat: Infinity,
                  ease: "linear"
                }
              }}
            >
              <Crown className="w-8 h-8 text-primary" />
            </motion.div>
            <span className="bg-primary/10 text-primary px-6 py-2 rounded-full text-sm font-medium">
              Premium Quality
            </span>
          </motion.div>

          <motion.h1 
            variants={textVariants}
            className="text-6xl md:text-8xl font-bold mb-6"
          >
            Experience Pure
            <span className="block text-primary mt-2">Natural Essence</span>
          </motion.h1>

          <motion.p
            variants={textVariants}
            className="text-xl md:text-2xl text-gray-400 max-w-3xl mx-auto mb-12"
          >
            Discover our premium collection of Himalayan Pink Salt, 
            carefully sourced from the heart of nature.
          </motion.p>

          <motion.div
            variants={buttonVariants}
            className="flex flex-col sm:flex-row gap-6 justify-center"
          >
            <Link
              to="products"
              spy={true}
              smooth={true}
              duration={800}
              offset={-80}
              className="bg-primary hover:bg-primary/90 text-white px-8 py-4 rounded-full text-lg font-medium transition-all transform hover:scale-105 cursor-pointer"
            >
              View Products
            </Link>
            <a
              href="https://wa.me/919913007777"
              target="_blank"
              rel="noopener noreferrer"
              className="bg-dark-200 hover:bg-dark-300 text-white px-8 py-4 rounded-full text-lg font-medium transition-all transform hover:scale-105"
            >
              Contact Us
            </a>
          </motion.div>
        </motion.div>

        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 1.5, duration: 1 }}
          className="absolute -bottom-[5rem] left-1/2 transform -translate-x-1/2"
        >
          <Link
            to="about"
            spy={true}
            smooth={true}
            duration={800}
            offset={-80}
            className="cursor-pointer"
          >
            <ChevronDown className="w-10 h-10 text-primary animate-bounce" />
          </Link>
        </motion.div>
      </div>
    </section>
  );
}

export default Hero;
----------------------------

src/components/Loader.jsx

import { motion } from 'framer-motion';
import rocketImage from '../img/mountain.png';

function RocketLoader() {
  return (
    <div className="fixed inset-0 bg-black flex flex-col items-center justify-center z-50">
      <motion.div
        initial={{ opacity: 0 }}
        animate={{
          opacity: [0, 1, 0], // Fade in and out
          scale: [0.9, 1, 0.9], // Subtle scaling for depth
        }}
        transition={{
          duration: 2,
          ease: "easeInOut",
          repeat: Infinity,
        }}
        className="relative w-24 h-24 mb-4"
      >
        <img
          src={rocketImage}
          alt="Loading..."
          className="w-full h-full object-contain"
        />
      </motion.div>

      <motion.p
        className="text-white text-lg font-medium mt-4"
      >
        {"Loading".split("").map((char, i) => (
          <motion.span
            key={i}
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{
              duration: 0.2,
              delay: i * 0.1,
              repeat: Infinity,
              repeatDelay: 1,
              repeatType: "reverse"
            }}
          >
            {char}
          </motion.span>
        ))}
        <motion.span
          initial={{ opacity: 0 }}
          animate={{ opacity: [0, 1, 0] }}
          transition={{
            duration: 0.5,
            repeat: Infinity,
            delay: 0.7
          }}
        >
          ...
        </motion.span>
      </motion.p>

      <div className="absolute inset-0 overflow-hidden">
        {[...Array(20)].map((_, i) => (
          <motion.div
            key={i}
            initial={{ opacity: 0 }}
            animate={{ opacity: [0, 1, 0] }}
            transition={{
              delay: Math.random() * 2,
              duration: 2 + Math.random() * 3,
              repeat: Infinity,
            }}
            className="absolute rounded-full bg-primary"
            style={{
              width: `${Math.random() * 4 + 1}px`,
              height: `${Math.random() * 4 + 1}px`,
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
            }}
          />
        ))}
      </div>
    </div>
  );
}

export default RocketLoader;
------------------------------
src/components/About.jsx

import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { Leaf, Heart, Shield } from 'lucide-react';

function About() {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });

  const features = [
    {
      icon: <Leaf className="w-10 h-10" />,
      title: "100% Natural",
      description: "Our products are sourced directly from nature, ensuring purity in every grain."
    },
    {
      icon: <Heart className="w-10 h-10" />,
      title: "Health Benefits",
      description: "Rich in minerals and natural elements that contribute to your wellbeing."
    },
    {
      icon: <Shield className="w-10 h-10" />,
      title: "Quality Assured",
      description: "Every product undergoes strict quality checks to meet the highest standards."
    }
  ];

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.6,
        ease: "easeOut"
      }
    }
  };

  return (
    <section id="about" ref={ref} className="py-24 bg-dark-200">
      <motion.div
        variants={containerVariants}
        initial="hidden"
        animate={inView ? "visible" : "hidden"}
        className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"
      >
        <motion.div 
          variants={itemVariants}
          className="text-center max-w-3xl mx-auto mb-20"
        >
          <motion.span 
            initial={{ scale: 0 }}
            animate={inView ? { scale: 1 } : { scale: 0 }}
            transition={{ duration: 0.5 }}
            className="inline-block bg-primary/10 text-primary px-4 py-2 rounded-full text-sm font-medium mb-4"
          >
            Our Philosophy
          </motion.span>
          <h2 className="text-4xl md:text-5xl font-bold mb-6 text-white">
            About <span className="text-primary">Vrinda Naturals</span>
          </h2>
          <p className="text-gray-400 text-lg leading-relaxed">
            At Vrinda Naturals, we believe in bringing nature's purest offerings to your doorstep.
            Our journey is rooted in tradition and powered by modern innovation.
          </p>
        </motion.div>

        <motion.div 
          variants={containerVariants}
          className="grid md:grid-cols-3 gap-8"
        >
          {features.map((feature, index) => (
            <motion.div
              key={index}
              variants={itemVariants}
              whileHover={{ 
                scale: 1.02,
                transition: { duration: 0.2 }
              }}
              className="relative group"
            >
              <div className="absolute inset-0 bg-primary/5 rounded-2xl transform -skew-y-2 group-hover:skew-y-0 transition-transform duration-300" />
              <div className="relative bg-dark-100 p-8 rounded-2xl border border-primary/10 group-hover:border-primary/20 transition-colors duration-300">
                <div className="mb-6 relative">
                  <div className="absolute inset-0 bg-primary/20 rounded-full blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                  <div className="relative bg-primary/10 w-16 h-16 rounded-full flex items-center justify-center text-primary group-hover:bg-primary/20 transition-colors duration-300">
                    {feature.icon}
                  </div>
                </div>
                <h3 className="text-2xl font-bold mb-4 text-white group-hover:text-primary transition-colors duration-300">
                  {feature.title}
                </h3>
                <p className="text-gray-400 text-lg leading-relaxed">
                  {feature.description}
                </p>
              </div>
            </motion.div>
          ))}
        </motion.div>
      </motion.div>
    </section>
  );
}

export default About;
-----------------------------

src/components/Products.jsx

import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { ShoppingCart, Star, Scale, Utensils, Heart } from 'lucide-react';

function Products() {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });

  const products = [
    {
      id: 1,
      name: 'Himalayan Pink Rock Salt - Packet',
      description: 'High-quality Himalayan Pink Rock Salt packed in a sealed 1kg pouch. Rich in minerals and perfect for daily cooking. Our premium salt is sourced directly from the Himalayan mountains, ensuring the highest quality and purity. Each crystal contains essential minerals that contribute to a healthy lifestyle.',
      rating: 5,
      benefits: [
        {
          icon: <img src='https://cdn-icons-png.flaticon.com/512/3449/3449449.png' className='w-8 h-8'></img>,
          title: "COOKING",
          description: "Perfect for all cooking needs"
        },
        {
          icon: <img src='https://cdn-icons-png.flaticon.com/512/1834/1834842.png' className='w-8 h-8'></img>,
          title: "RESPIRATORY HEALTH",
          description: "Improves breathing naturally"
        },
        {
          icon: <img src='https://res.cloudinary.com/day0qlfda/image/upload/v1743936513/xvk4icjonvwezme2v6tj.png' className='w-full h-full' ></img>,
          title: "HEART & BONE",
          description: "Supports cardiovascular health"
        }
      ],
      weights: [
        { size: '1kg', price: 150 }
      ],
      image: 'https://2.wlimg.com/product_images/bc-full/2024/10/294239/himalayan-pink-rock-salt-1729834601-7655481.jpeg'
    },
    {
      id: 2,
      name: 'Himalayan Pink Rock Salt - Bottle Pack',
      description: 'Natural Himalayan Pink Salt available in convenient bottle packaging. Ideal for table use and storage. Available in 1kg and 500gm sizes. The bottle packaging ensures long-lasting freshness and easy dispensing. Perfect for both kitchen and dining table use.',
      rating: 4.9,
      benefits: [
        {
          icon: <img src='https://cdn-icons-png.flaticon.com/512/3449/3449449.png' className='w-8 h-8'></img>,
          title: "COOKING",
          description: "Perfect for all cooking needs"
        },
        {
          icon: <img src='https://cdn-icons-png.flaticon.com/512/1834/1834842.png' className='w-8 h-8'></img>,
          title: "RESPIRATORY HEALTH",
          description: "Improves breathing naturally"
        },
        {
          icon: <img src='https://res.cloudinary.com/day0qlfda/image/upload/v1743936513/xvk4icjonvwezme2v6tj.png' className='w-full h-full' ></img>,
          title: "HEART & BONE",
          description: "Supports cardiovascular health"
        }
      ],
      weights: [
        { size: '1kg', price: 200 },
        { size: '500gm', price: 120 }
      ],
      image: 'https://www.ambrosiaorganicfarm.com/wp-content/uploads/2022/12/himalayan-rock-salt-1.webp'
    },
  ];

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.3
      }
    }
  };

  const productVariants = {
    hidden: { opacity: 0, y: 100 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 1,
        ease: "easeOut"
      }
    }
  };

  const imageVariants = {
    hidden: { scale: 0.8, opacity: 0 },
    visible: {
      scale: 1,
      opacity: 1,
      transition: {
        duration: 0.8,
        ease: "easeOut"
      }
    }
  };

  const benefitVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.6,
        ease: "easeOut"
      }
    }
  };

  return (
    <section id="products" ref={ref} className="py-20 bg-dark-100">
      <motion.div
        variants={containerVariants}
        initial="hidden"
        animate={inView ? "visible" : "hidden"}
        className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"
      >
        <motion.div variants={productVariants} className="text-center mb-16">
          <motion.span 
            initial={{ scale: 0 }}
            animate={{ scale: 1 }}
            transition={{ duration: 0.5 }}
            className="inline-block bg-primary/10 text-primary px-4 py-2 rounded-full text-sm font-medium mb-4"
          >
            Our Products
          </motion.span>
          <h2 className="text-4xl md:text-5xl font-bold mb-6">
            Premium Quality <span className="text-primary">Salt Products</span>
          </h2>
          <p className="text-gray-400 max-w-2xl mx-auto">
            Experience the pure taste and natural benefits of our carefully selected products.
          </p>
        </motion.div>

        <div className="space-y-32">
          {products.map((product, index) => (
            <motion.div
              key={product.id}
              variants={productVariants}
              className={`flex flex-col ${index % 2 === 0 ? 'lg:flex-row' : 'lg:flex-row-reverse'} gap-8 lg:gap-16 items-center`}
            >
              <div className="w-full lg:w-1/2 relative group">
                <motion.div
                  variants={imageVariants}
                  whileHover={{ scale: 1.05 }}
                  transition={{ duration: 0.3 }}
                  className="relative rounded-2xl overflow-hidden shadow-2xl"
                >
                  <img
                    src={product.image}
                    alt={product.name}
                    className="w-full h-[400px] object-cover"
                  />
                  <div className="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent" />
                  <motion.div 
                    initial={{ opacity: 0, y: -20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: 0.3 }}
                    className="absolute top-4 right-4 bg-primary/90 text-white px-3 py-1 rounded-full flex items-center"
                  >
                    <Star className="w-4 h-4 fill-current" />
                    <span className="ml-1">{product.rating}</span>
                  </motion.div>
                </motion.div>
              </div>

              <div className="w-full lg:w-1/2 space-y-8">
                <motion.h3 
                  variants={productVariants}
                  className="text-3xl font-bold text-white"
                >
                  {product.name}
                </motion.h3>
                <motion.p 
                  variants={productVariants}
                  className="text-gray-400 text-lg leading-relaxed"
                >
                  {product.description}
                </motion.p>

                <motion.div
                  variants={containerVariants}
                  className="grid grid-cols-3 gap-4 py-6"
                >
                  {product.benefits.map((benefit, idx) => (
                    <motion.div
                      key={idx}
                      variants={benefitVariants}
                      whileHover={{ scale: 1.05 }}
                      className="flex flex-col items-center text-center group"
                    >
                      <div className="relative mb-4">
                        <div className="absolute inset-0 bg-primary/20 rounded-full blur-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                        <div className="relative w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center text-primary group-hover:bg-primary/20 transition-all duration-300">
                          {benefit.icon}
                        </div>
                      </div>
                      <h4 className="text-sm font-bold text-white mb-2">{benefit.title}</h4>
                      <p className="text-xs text-gray-400">{benefit.description}</p>
                    </motion.div>
                  ))}
                </motion.div>

                <motion.div 
                  variants={productVariants}
                  className="space-y-4"
                >
                  <div className="flex items-center gap-2 text-white">
                    <Scale className="w-5 h-5 text-primary" />
                    <h4 className="text-xl font-semibold">Available Quantities:</h4>
                  </div>
                  
                  <div className="grid grid-cols-2 sm:grid-cols-3 gap-4">
                    {product.weights.map((weight) => (
                      <motion.div
                        key={weight.size}
                        variants={productVariants}
                        className="bg-black rounded-xl p-6 text-center border border-primary/20"
                      >
                        <div className="text-xl font-semibold text-white mb-2">
                          {weight.size}
                        </div>
                        <div className="text-primary text-2xl font-bold">
                          ₹{weight.price}
                        </div>
                      </motion.div>
                    ))}
                  </div>
                </motion.div>

                <motion.a
                  href="https://wa.me/919913007777"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="inline-flex items-center px-8 py-4 bg-primary text-white rounded-full hover:bg-primary/90 transition-all duration-300"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <ShoppingCart className="w-5 h-5 mr-2" />
                  Order Now
                </motion.a>
              </div>
            </motion.div>
          ))}
        </div>
      </motion.div>
    </section>
  );
}

export default Products;

----------------------------------
src/components/Certifications.jsx

import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { Award, CheckCircle, FileText, Shield, Star, Leaf } from 'lucide-react';

function Certifications() {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });

  const certifications = [
    {
      id: 1,
      name: 'FSSAI License',
      description: 'Food Safety and Standards Authority of India',
      icon: <FileText className="w-8 h-8" />,
      number: '10012345000789'
    },
    {
      id: 2,
      name: 'ISO 22000:2018',
      description: 'International Food Safety Management',
      icon: <Award className="w-8 h-8" />,
      number: 'ISO22K-2023-789'
    },
    {
      id: 3,
      name: 'GMP Certified',
      description: 'Good Manufacturing Practice',
      icon: <CheckCircle className="w-8 h-8" />,
      number: 'GMP-2023-456'
    },
    {
      id: 4,
      name: 'HACCP Certified',
      description: 'Hazard Analysis Critical Control Point',
      icon: <Shield className="w-8 h-8" />,
      number: 'HACCP-2023-789'
    },
    {
      id: 5,
      name: 'Quality Excellence',
      description: 'Product Quality Standards',
      icon: <Star className="w-8 h-8" />,
      number: 'QE-2023-123'
    },
    {
      id: 6,
      name: 'Organic Certification',
      description: 'Organic Processing Standards',
      icon: <Leaf className="w-8 h-8" />,
      number: 'ORG-2023-345'
    }
  ];

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.6,
        ease: "easeOut"
      }
    }
  };

  return (
    <section id="certifications" ref={ref} className="py-24 bg-dark-200">
      <motion.div
        variants={containerVariants}
        initial="hidden"
        animate={inView ? "visible" : "hidden"}
        className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"
      >
        <motion.div variants={itemVariants} className="text-center max-w-3xl mx-auto mb-20">
          <motion.span 
            initial={{ scale: 0 }}
            animate={inView ? { scale: 1 } : { scale: 0 }}
            transition={{ duration: 0.5 }}
            className="inline-block bg-primary/10 text-primary px-4 py-2 rounded-full text-sm font-medium mb-4"
          >
            Our Standards
          </motion.span>
          <h2 className="text-4xl md:text-5xl font-bold mb-6 text-white">
            Quality <span className="text-primary">Certifications</span>
          </h2>
          <p className="text-gray-400 text-lg leading-relaxed">
            Our commitment to excellence is backed by internationally recognized certifications
            and quality standards.
          </p>
        </motion.div>

        <motion.div 
          variants={containerVariants}
          className="grid md:grid-cols-2 lg:grid-cols-3 gap-8"
        >
          {certifications.map((cert) => (
            <motion.div
              key={cert.id}
              variants={itemVariants}
              whileHover={{ 
                scale: 1.02,
                transition: { duration: 0.2 }
              }}
              className="relative group"
            >
              <div className="absolute inset-0 bg-primary/5 rounded-2xl transform -skew-y-2 group-hover:skew-y-0 transition-transform duration-300" />
              <div className="relative bg-dark-100 p-8 rounded-2xl border border-primary/10 group-hover:border-primary/20 transition-colors duration-300">
                <div className="flex items-center gap-6 mb-6">
                  <div className="relative">
                    <div className="absolute inset-0 bg-primary/20 rounded-full blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                    <div className="relative bg-primary/10 w-16 h-16 rounded-full flex items-center justify-center text-primary group-hover:bg-primary/20 transition-colors duration-300">
                      {cert.icon}
                    </div>
                  </div>
                  <div>
                    <h3 className="text-xl font-bold text-white group-hover:text-primary transition-colors duration-300">
                      {cert.name}
                    </h3>
                    <p className="text-gray-400">
                      {cert.description}
                    </p>
                  </div>
                </div>
                <div className="pl-[88px]">
                  <div className="text-sm text-primary/80 font-medium">
                    Certificate No:
                  </div>
                  <div className="font-mono text-white/90">
                    {cert.number}
                  </div>
                </div>
              </div>
            </motion.div>
          ))}
        </motion.div>
      </motion.div>
    </section>
  );
}

export default Certifications;
-----------------------------
src/components/Contact.jsx

import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { Phone, Mail, MapPin, Clock, Building2 } from 'lucide-react';

function Contact() {
  const [ref, inView] = useInView({
    threshold: 0.3,
    triggerOnce: true
  });

  const contactCards = [
    {
      icon: <Phone className="w-8 h-8" />,
      title: "Phone",
      content: "+91 9913007777",
      color: "from-blue-500 to-cyan-400",
      link: "tel:+919913007777"
    },
    {
      icon: <Mail className="w-8 h-8" />,
      title: "Email",
      content: "vrindagruhudyog79@gmail.com",
      color: "from-purple-500 to-pink-400",
      link: "mailto:vrindagruhudyog79@gmail.com"
    },
    {
      icon: <MapPin className="w-8 h-8" />,
      title: "Location",
      content: "Sayan Road, Surat – 394130",
      color: "from-orange-500 to-red-400",
      link: "https://maps.google.com/?q=Sayan+Road,+Surat,+394130"
    },
    {
      icon: <Clock className="w-8 h-8" />,
      title: "Business Hours",
      content: "Mon - Sat: 9:00 AM - 6:00 PM",
      color: "from-green-500 to-emerald-400"
    },
    {
      icon: <Building2 className="w-8 h-8" />,
      title: "Company",
      content: "Vrinda Naturals Pvt. Ltd.",
      color: "from-yellow-500 to-amber-400"
    }
  ];

  return (
    <section id="contact" ref={ref} className="py-20 bg-black">
      <div className="section-container">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8 }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl font-bold text-white mb-6">
            Let's <span className="bg-gradient-to-r from-primary to-primary/70 bg-clip-text text-transparent">Connect</span>
          </h2>
          <p className="text-gray-400 max-w-2xl mx-auto text-lg">
            Ready to experience nature's finest? Reach out to us through any of these channels.
          </p>
        </motion.div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {contactCards.map((card, index) => (
            <motion.div
              key={card.title}
              initial={{ opacity: 0, y: 20 }}
              animate={inView ? { opacity: 1, y: 0 } : {}}
              transition={{ duration: 0.5, delay: index * 0.1 }}
              className="relative group"
              style={{ perspective: '1000px' }}
            >
              <motion.div
                whileHover={{ rotateY: 10, rotateX: 10 }}
                transition={{ type: "spring", stiffness: 300 }}
              >
                <div className="absolute inset-0 bg-gradient-to-r opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-2xl blur-lg"
                  style={{ background: `linear-gradient(135deg, ${card.color})` }}
                ></div>
                <a 
                  href={card.link}
                  target={card.link?.startsWith('http') ? "_blank" : undefined}
                  rel={card.link?.startsWith('http') ? "noopener noreferrer" : undefined}
                  className="block"
                >
                  <div className="relative p-8 rounded-2xl border border-primary/60 group-hover:border-primary/30 transition-all duration-300 h-full backdrop-blur-sm">
                    <div className={`w-16 h-16 rounded-full bg-gradient-to-r ${card.color} p-4 mb-6 text-white flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300`}>
                      {card.icon}
                    </div>
                    <h3 className="text-xl font-semibold text-white mb-3 group-hover:text-primary transition-colors duration-300">
                      {card.title}
                    </h3>
                    <p className="text-gray-400 group-hover:text-gray-300 transition-colors duration-300">
                      {card.content}
                    </p>
                  </div>
                </a>
              </motion.div>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
}

export default Contact;

-------------------------
src/components/Footer.jsx

import { motion } from 'framer-motion';
import { MessageCircle, Package, Bot as Bottle } from 'lucide-react';

function Footer() {
  const currentYear = new Date().getFullYear();

  const footerLinks = {
    products: [
      { name: 'Natural Products', href: '#products', icon: <Package className="w-4 h-4" /> },
      { name: 'Packaged Items', href: '#products', icon: <Bottle className="w-4 h-4" /> }
    ],
    company: [
      { name: 'About Us', href: '#about' },
      { name: 'Contact Us', href: '#contact' }
    ]
  };

  return (
    <footer className="bg-gradient-to-t from-primary/10 to-transparent text-white pt-16 pb-8">
      <div className="section-container flex flex-col items-center">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-12 mb-16 w-full max-w-4xl">
          {/* Company Info */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="space-y-6 text-center md:text-left"
          >
            <motion.h3
              className="text-3xl font-bold gradient-text"
              whileHover={{ scale: 1.05 }}
              transition={{ type: "spring", stiffness: 300 }}
            >
              Vrinda Naturals
            </motion.h3>
            <p className="text-gray-400">
              Bringing nature's goodness to your doorstep. Premium quality natural and organic products for a healthier lifestyle.
            </p>
          </motion.div>

          {/* Products */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.1 }}
            viewport={{ once: true }}
            className="text-center md:text-left"
          >
            <h4 className="text-lg font-semibold mb-6">Our Products</h4>
            <ul className="space-y-4">
              {footerLinks.products.map((link) => (
                <li key={link.name}>
                  <a
                    href={link.href}
                    className="text-gray-400 hover:text-primary transition-colors duration-300 flex items-center justify-center md:justify-start gap-2"
                  >
                    {link.icon}
                    {link.name}
                  </a>
                </li>
              ))}
            </ul>
          </motion.div>

          {/* Company Links */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            viewport={{ once: true }}
            className="text-center md:text-left"
          >
            <h4 className="text-lg font-semibold mb-6">Company</h4>
            <ul className="space-y-4">
              {footerLinks.company.map((link) => (
                <li key={link.name}>
                  <a
                    href={link.href}
                    className="text-gray-400 hover:text-primary transition-colors duration-300"
                  >
                    {link.name}
                  </a>
                </li>
              ))}
            </ul>
          </motion.div>
        </div>

        {/* WhatsApp Button */}
        <div className="flex justify-center mb-12">
          <motion.a
            href="https://wa.me/919913007777"
            target="_blank"
            rel="noopener noreferrer"
            className="flex items-center space-x-3 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white px-8 py-4 rounded-full transition-all shadow-lg hover:shadow-xl"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            <MessageCircle className="w-6 h-6" />
            <span className="text-lg font-medium">Connect on WhatsApp</span>
          </motion.a>
        </div>

        {/* Divider */}
        <motion.div
          className="w-full h-px bg-gradient-to-r from-transparent via-primary to-transparent mb-8"
          initial={{ scaleX: 0 }}
          whileInView={{ scaleX: 1 }}
          transition={{ duration: 1 }}
          viewport={{ once: true }}
        />

        {/* Copyright */}
        <div className="text-center text-gray-400 text-sm">
          <p>&copy; {currentYear} Vrinda Naturals. All rights reserved.</p>
        </div>
      </div>
    </footer>
  );
}

export default Footer;


------------------------
index.html 

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/png" href="/logo.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>Vrinda Naturals | Himalayan Pink Rock Salt & Organic Products</title>
    <meta name="title" content="Vrinda Naturals | Himalayan Pink Rock Salt & Organic Products" />
    <meta name="description" content="Buy authentic Himalayan Pink Rock Salt from Vrinda Naturals - 100% pure, organic. Enhance flavor, improve health & elevate cooking naturally. Shop now!" />

    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://vrindanaturals.netlify.app/" />
    <meta property="og:title" content="Vrinda Naturals | Himalayan Pink Rock Salt & Organic Products" />
    <meta property="og:description" content="Discover authentic Himalayan Pink Rock Salt and premium natural products. 100% pure, organic & ethically sourced for your healthy lifestyle. Shop now!" />
    <meta property="og:image" content="https://vrindanaturals.netlify.app/logo.png" />
    <meta property="og:site_name" content="Vrinda Naturals" />
    <meta property="og:locale" content="en_US" />

    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="https://vrindanaturals.netlify.app/" />
    <meta property="twitter:title" content="Vrinda Naturals | Premium Himalayan Pink Rock Salt" />
    <meta property="twitter:description" content="Authentic Himalayan Pink Rock Salt and natural products. Pure. Organic. Trusted. Enhance health naturally." />
    <meta property="twitter:image" content="https://vrindanaturals.netlify.app/logo.png" /> 

    <meta name="keywords" content="Vrinda Naturals, Himalayan Pink Rock Salt, Organic Salt, Natural Health Products, Buy Pink Salt, Premium Salt, Himalayan Salt Benefits, Natural Products India, Organic Health Products, Pure Rock Salt" />

    <meta name="author" content="Vrinda Naturals" />
    <meta name="robots" content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1" />
    <meta name="language" content="English" />
    <meta name="revisit-after" content="3 days" />
    <meta name="theme-color" content="#FF4790" />
    <meta name="msapplication-TileColor" content="#FF4790" />
    <meta name="rating" content="General" />
    <meta name="geo.region" content="IN" />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />

    <meta name="google-site-verification" content="whbS8i4c9DDvZwbgVUuAktotRJ9vr8I_mDPxnzUZ50I" />

    <link rel="canonical" href="https://vrindanaturals.netlify.app/" />

    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Organization",
      "name": "Vrinda Naturals",
      "url": "https://vrindanaturals.netlify.app/",
      "logo": "https://vrindanaturals.netlify.app/logo.png",
      "description": "Premium supplier of Himalayan Pink Rock Salt and natural organic products.",
      "contactPoint": {
        "@type": "ContactPoint",
        "telephone": "+91 9913007777",
        "contactType": "Customer Service",
        "areaServed": "IN",
        "availableLanguage": "en_US"
      },
    }
    </script>

    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Product",
      "name": "Himalayan Pink Rock Salt",
      "image": "https://vrindanaturals.netlify.app/assets/Packimg-CegN36iw.jpg", 
      "description": "100% pure and authentic Himalayan Pink Rock Salt, ethically sourced and packed for premium quality.",
      "brand": {
        "@type": "Brand",
        "name": "Vrinda Naturals"
      },
      "offers": {
        "@type": "Offer",
        "priceCurrency": "INR",
        "price": "99.00", // Price updated
        "availability": "https://schema.org/InStock",
        "url": "https://vrindanaturals.netlify.app/" // URL where this product can be purchased (can be the homepage or a specific product page)
        // "priceValidUntil": "2027-5-10" // Optional: If the price is valid for a certain period
      }
      // If you have product reviews, uncomment and fill this section:
      // "aggregateRating": {
      //   "@type": "AggregateRating",
      //   "ratingValue": "4.8", // Example: average rating
      //   "reviewCount": "125"  // Example: number of reviews
      // }
    }
    </script>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>
---------------------------
app.css

#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}
---------------
index.css

@tailwind base;
@tailwind components;
@tailwind utilities;


:root {
  --primary: #FF4790;
  --dark-100: #000000;
  --dark-200: #111111;
  --dark-300: #222222;
}

@layer base {
  body {
    @apply bg-dark-100 text-white;
  }
}

@layer components {
  .section-container {
    @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;
  }

  .section-title {
    @apply text-4xl font-bold mb-6 text-white;
  }

  .btn-primary {
    @apply bg-primary text-white hover:bg-primary/90 transition-colors duration-300;
  }

  .btn-secondary {
    @apply bg-white/10 text-white backdrop-blur-sm hover:bg-white/20 transition-colors duration-300;
  }

  .gradient-text {
    @apply bg-clip-text text-transparent bg-gradient-to-r from-primary to-pink-400;
  }

  .nav-link {
    @apply hover:text-primary transition-colors duration-300;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: translate(-50%, -20px);
  }
  to {
    opacity: 1;
    transform: translate(-50%, 0);
  }
}

.animate-fade-in {
  animation: fade-in 0.3s ease-out forwards;
}

=========================================
- when i chack Vrindanaturals.netlify.app - SEO Checker then its show this 
Task list of SEO Improvements8 Tasks

Add a H1 heading to this page.
Very important!

Use good headings on the page.
Very important!

This page has only very few internal links. If it's a welcome page, consider removing it.
Very important!

Use 301 redirects to drive traffic to URLS with the same domain and sub domain (www and non-www subdomain).
Very important!

Fix errors regarding the language markup of your web page.
Very important!

Review and improve the page title.
Important!

Improve the text of the meta description.
Important!

The page title should be better suited to the content of the page.
Important!

==========
Language
Language defined in HTML: en
Language defined in meta tags: english
Server location: India
 There are different language information within the page markup.
 One or more of the specified languages are not ISO standard (en, en-us, de, etc.)
 The following language is defined by HTML: english
 ------
 Content
 There are only 0 words on this page. Use at least 250 words to provide useful information.
 Some words from the page title are not used within the pages content
 No paragraphs were detected.
 No placeholders texts or images were found.
 -------
 Page structure58% achieved
H1 heading
 There is no H1 heading specified.
 H1-H6 headings
Headings
 There are no headings specified on the page. Headings are important for search engine optimization and help to structure your content.
---------
Link structure0% achieved
Internal links
 This page seems to be an entry page, because only very few links were found.
-----------
Server configuration0% achieved
HTTP redirects
The checked page does not redirect to another URL.
 This website uses URLs with www and non-www subdomain. This may cause duplicate content and bad links to your website. Redirect Checker
---------------
Robots.txt
No valid Robots.txt file was found.
----------------

- all fix and give me proper updateed code and files. in jsx or js formate.